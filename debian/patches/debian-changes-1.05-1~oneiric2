Description: Upstream changes introduced in version 1.05-1~oneiric2
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 pgrouting (1.05-1~oneiric2) oneiric; urgency=low
 .
   * GMP library fix (DD error)
 .
 The person named in the Author field signed this changelog entry.
Author: Daniel Kastl (Georepublic) <daniel@georepublic.de>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- pgrouting-1.05.orig/CMakeLists.txt
+++ pgrouting-1.05/CMakeLists.txt
@@ -85,8 +85,10 @@ IF(WIN32)
   LINK_LIBRARIES(postgres)
 ENDIF(WIN32)
 
-SET(CMAKE_C_FLAGS   "-O2 -g -lgmp -frounding-math")
-SET(CMAKE_CXX_FLAGS "-O2 -g -lgmp -frounding-math")
+#SET(CMAKE_C_FLAGS   "-O2 -g -lgmp -frounding-math -lCGAL")
+#SET(CMAKE_CXX_FLAGS "-O2 -g -lgmp -frounding-math -lCGAL")
+SET(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -O2 -g -frounding-math")
+SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -g -frounding-math")
 
 # Recurse into the subdirectories.  This does not actually
 # cause another cmake executable to run.  The same process will walk through
--- pgrouting-1.05.orig/extra/driving_distance/src/alpha_drivedist.cpp
+++ pgrouting-1.05/extra/driving_distance/src/alpha_drivedist.cpp
@@ -34,6 +34,8 @@ corresponding to the Alpha shape.
 #include <CGAL/Simple_cartesian.h>
 #include <CGAL/Filtered_kernel.h>
 #include <CGAL/algorithm.h>
+#include <CGAL/Gmpq.h>
+#include <CGAL/Gmpz.h>
 
 #include <vector>
 #include <list>
--- pgrouting-1.05.orig/cmake/FindCGAL.cmake
+++ pgrouting-1.05/cmake/FindCGAL.cmake
@@ -5,10 +5,10 @@
 #  CGAL_LIBRARIES, the libraries needed to use CGAL.
 #  CGAL_FOUND, If false, do not try to use CGAL.
 
-if(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
+if(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES AND GMP_LIBRARIES)
    set(CGAL_FOUND TRUE)
 
-else(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
+else(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES AND GMP_LIBRARIES)
 
  FIND_PATH(CGAL_INCLUDE_DIR CGAL/basic.h
       /usr/include
@@ -28,16 +28,28 @@ else(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES
      $ENV{ProgramFiles}/CGAL/*/lib
      $ENV{SystemDrive}/CGAL/*/lib
      )
-      
+
+  find_library(GMP_LIBRARIES NAMES gmp libgmp
+     PATHS
+     /usr/lib
+     /usr/local/lib
+     /usr/lib/gmp
+     /usr/lib64
+     /usr/local/lib64
+     /usr/lib64/gmp
+     $ENV{ProgramFiles}/gmp/*/lib
+     $ENV{SystemDrive}/gmp/*/lib
+     )
+
   if(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
     set(CGAL_FOUND TRUE)
-    message(STATUS "Found CGAL: ${CGAL_INCLUDE_DIR}, ${CGAL_LIBRARIES}")
+    message(STATUS "Found CGAL: ${CGAL_INCLUDE_DIR}, ${CGAL_LIBRARIES}, ${GMP_LIBRARIES}")
     INCLUDE_DIRECTORIES(${CGAL_INCLUDE_DIR} $ENV{CGAL_CFG})
-  else(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
+  else(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES AND GMP_LIBRARIES)
     set(CGAL_FOUND FALSE)
     message(STATUS "CGAL not found.")
-  endif(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
+  endif(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES AND GMP_LIBRARIES)
 
-  mark_as_advanced(CGAL_INCLUDE_DIR CGAL_LIBRARIES)
+  mark_as_advanced(CGAL_INCLUDE_DIR CGAL_LIBRARIES GMP_LIBRARIES)
 
-endif(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES)
+endif(CGAL_INCLUDE_DIR AND CGAL_LIBRARIES AND GMP_LIBRARIES)
--- pgrouting-1.05.orig/extra/driving_distance/src/CMakeLists.txt
+++ pgrouting-1.05/extra/driving_distance/src/CMakeLists.txt
@@ -1,4 +1,4 @@
 SET(LIBRARY_OUTPUT_PATH ../../../lib/)
-LINK_LIBRARIES(${CGAL_LIBRARIES})
+LINK_LIBRARIES(${CGAL_LIBRARIES} ${GMP_LIBRARIES})
 ADD_LIBRARY(routing_dd SHARED alpha.c alpha_drivedist.cpp alpha.h boost_drivedist.cpp drivedist.c drivedist.h)
 INSTALL(TARGETS routing_dd DESTINATION ${LIBRARY_INSTALL_PATH})
